{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nimport { FlyToInterpolator } from 'react-map-gl'\nimport WebMercatorViewport from 'viewport-mercator-project'\nimport mapboxgl from 'mapbox-gl'\n\nconst VALID_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n\nclass Geocoder extends PureComponent {\n  geocoder = null\n  cachedResult = null\n\n  componentDidMount() {\n    this.initializeGeocoder()\n  }\n\n  componentWillUnmount() {\n    this.removeGeocoder()\n  }\n\n  componentDidUpdate() {\n    this.removeGeocoder()\n    this.initializeGeocoder()\n  }\n\n  initializeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n    const containerNode = this.getContainerNode()\n    const {\n      mapboxApiAccessToken,\n      inputValue,\n      origin,\n      zoom,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      localGeocoderOnly,\n      reverseGeocode,\n      enableEventLogging,\n      marker,\n      render,\n      getItemValue,\n      onInit,\n      position\n    } = this.props\n    const options = {\n      accessToken: mapboxApiAccessToken,\n      origin,\n      zoom,\n      flyTo: false,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      localGeocoderOnly,\n      reverseGeocode,\n      enableEventLogging,\n      marker,\n      mapboxgl\n    }\n\n    if (render && typeof render === 'function') {\n      options.render = render\n    }\n\n    if (getItemValue && typeof getItemValue === 'function') {\n      options.getItemValue = getItemValue\n    }\n\n    this.geocoder = new MapboxGeocoder(options)\n    this.subscribeEvents()\n\n    if (containerNode) {\n      containerNode.appendChild(this.geocoder.onAdd(mapboxMap))\n    } else {\n      mapboxMap.addControl(this.geocoder, VALID_POSITIONS.find((_position) => position === _position))\n    }\n\n    if (inputValue !== undefined && inputValue !== null) {\n      this.geocoder.setInput(inputValue)\n    } else if (this.cachedResult) {\n      this.geocoder.setInput(this.cachedResult.place_name)\n    }\n\n    if (this.cachedResult || (inputValue !== undefined && inputValue !== null)) {\n      this.showClearIcon()\n    }\n\n    onInit(this.geocoder)\n  }\n\n  showClearIcon = () => {\n    // this is a hack to force clear icon to show if there is text in the input\n    this.geocoder._clearEl.style.display = 'block'\n  }\n\n  getMapboxMap = () => {\n    const { mapRef } = this.props\n\n    return (mapRef && mapRef.current && mapRef.current.getMap()) || null\n  }\n\n  getContainerNode = () => {\n    const { containerRef } = this.props\n\n    return (containerRef && containerRef.current) || null\n  }\n\n  subscribeEvents = () => {\n    this.geocoder.on('clear', this.handleClear)\n    this.geocoder.on('loading', this.handleLoading)\n    this.geocoder.on('results', this.handleResults)\n    this.geocoder.on('result', this.handleResult)\n    this.geocoder.on('error', this.handleError)\n  }\n\n  unsubscribeEvents = () => {\n    this.geocoder.off('clear', this.handleClear)\n    this.geocoder.off('loading', this.handleLoading)\n    this.geocoder.off('results', this.handleResults)\n    this.geocoder.off('result', this.handleResult)\n    this.geocoder.off('error', this.handleError)\n  }\n\n  removeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n\n    this.unsubscribeEvents()\n\n    if (mapboxMap && mapboxMap.removeControl) {\n      this.getMapboxMap().removeControl(this.geocoder)\n    }\n\n    this.geocoder = null\n  }\n\n  handleClear = () => {\n    this.cachedResult = null\n    this.props.onClear()\n  }\n\n  handleLoading = (event) => {\n    this.props.onLoading(event)\n  }\n\n  handleResults = (event) => {\n    this.props.onResults(event)\n  }\n\n  handleResult = (event) => {\n    const { result } = event\n    const { onViewportChange, onResult } = this.props\n    const { bbox, center, properties = {} } = result\n    const { short_code } = properties\n    const [longitude, latitude] = center\n    const bboxExceptions = {\n      fr: {\n        name: 'France',\n        bbox: [[-4.59235, 41.380007], [9.560016, 51.148506]]\n      },\n      us: {\n        name: 'United States',\n        bbox: [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n      },\n      ru: {\n        name: 'Russia',\n        bbox: [[19.66064, 41.151416], [190.10042, 81.2504]]\n      },\n      ca: {\n        name: 'Canada',\n        bbox: [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n      }\n    }\n    const { width, height } = this.getMapboxMap()\n      .getContainer()\n      .getBoundingClientRect()\n    let zoom = this.geocoder.options.zoom\n    const fitBounds = (bounds, viewport) => new WebMercatorViewport(viewport).fitBounds(bounds)\n\n    try {\n      if (!bboxExceptions[short_code] && bbox) {\n        zoom = fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], { width, height }).zoom\n      } else if (bboxExceptions[short_code]) {\n        zoom = fitBounds(bboxExceptions[short_code].bbox, { width, height }).zoom\n      }\n    } catch (e) {\n      console.warn('following result caused an error when trying to zoom to bbox: ', result) // eslint-disable-line\n      zoom = this.geocoder.options.zoom\n    }\n\n    onViewportChange({\n      longitude,\n      latitude,\n      zoom,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000\n    })\n    onResult(event)\n\n    this.cachedResult = result\n    this.geocoder._typeahead.selected = null\n    this.showClearIcon()\n  }\n\n  handleError = (event) => {\n    this.props.onError(event)\n  }\n\n  getGeocoder() {\n    return this.geocoder\n  }\n\n  render() {\n    return null\n  }\n\n  static propTypes = {\n    mapRef: PropTypes.object.isRequired,\n    containerRef: PropTypes.object,\n    onViewportChange: PropTypes.func,\n    mapboxApiAccessToken: PropTypes.string.isRequired,\n    inputValue: PropTypes.string,\n    origin: PropTypes.string,\n    zoom: PropTypes.number,\n    placeholder: PropTypes.string,\n    proximity: PropTypes.object,\n    trackProximity: PropTypes.bool,\n    collapsed: PropTypes.bool,\n    clearAndBlurOnEsc: PropTypes.bool,\n    clearOnBlur: PropTypes.bool,\n    bbox: PropTypes.array,\n    types: PropTypes.string,\n    countries: PropTypes.string,\n    minLength: PropTypes.number,\n    limit: PropTypes.number,\n    language: PropTypes.string,\n    filter: PropTypes.func,\n    localGeocoder: PropTypes.func,\n    localGeocoderOnly: PropTypes.bool,\n    reverseGeocode: PropTypes.bool,\n    enableEventLogging: PropTypes.bool,\n    marker: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    render: PropTypes.func,\n    getItemValue: PropTypes.func,\n    position: PropTypes.oneOf(VALID_POSITIONS),\n    onInit: PropTypes.func,\n    onClear: PropTypes.func,\n    onLoading: PropTypes.func,\n    onResults: PropTypes.func,\n    onResult: PropTypes.func,\n    onError: PropTypes.func\n  }\n\n  static defaultProps = {\n    onViewportChange: () => {},\n    origin: 'https://api.mapbox.com',\n    zoom: 16,\n    placeholder: 'Search',\n    trackProximity: false,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    minLength: 2,\n    limit: 5,\n    reverseGeocode: false,\n    enableEventLogging: true,\n    marker: true,\n    position: 'top-right',\n    onInit: () => {},\n    onClear: () => {},\n    onLoading: () => {},\n    onResults: () => {},\n    onResult: () => {},\n    onError: () => {}\n  }\n}\n\nexport default Geocoder\n"],"names":["VALID_POSITIONS","Geocoder","PureComponent","geocoder","cachedResult","initializeGeocoder","mapboxMap","this","getMapboxMap","containerNode","getContainerNode","mapboxApiAccessToken","inputValue","origin","zoom","placeholder","proximity","trackProximity","collapsed","clearAndBlurOnEsc","clearOnBlur","bbox","types","countries","minLength","limit","language","filter","localGeocoder","localGeocoderOnly","reverseGeocode","enableEventLogging","marker","render","getItemValue","onInit","position","props","options","accessToken","flyTo","mapboxgl","MapboxGeocoder","subscribeEvents","appendChild","onAdd","addControl","find","_position","setInput","place_name","showClearIcon","_clearEl","style","display","mapRef","current","getMap","containerRef","on","handleClear","handleLoading","handleResults","handleResult","handleError","unsubscribeEvents","off","removeGeocoder","removeControl","onClear","event","onLoading","onResults","result","onViewportChange","onResult","center","properties","short_code","longitude","latitude","bboxExceptions","fr","name","us","ru","ca","width","height","getContainer","getBoundingClientRect","fitBounds","bounds","viewport","WebMercatorViewport","e","console","warn","transitionInterpolator","FlyToInterpolator","transitionDuration","_typeahead","selected","onError","componentDidMount","componentWillUnmount","componentDidUpdate","getGeocoder","propTypes","PropTypes","object","isRequired","func","string","number","bool","array","oneOfType","oneOf","defaultProps"],"mappings":"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"}